{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,wBAAwB,wBAAwB,iBAAiB,KAAK,eAAe,gBAAgB,yBAAyB,uBAAuB,wBAAwB,KAAK,aAAa,SAAS,K;;;;;;;;;;;ACAxM,yJAAyJ,SAAS,sMAAsM,4QAA4Q,SAAS,mBAAmB,YAAY,mBAAmB,QAAQ,mBAAmB,kBAAkB,YAAY,GAAG,kJ;;;;;;;;;;;;;;;;;;;;;ACAjsB;AAO1C;IALA;QAME,UAAK,GAAG,cAAc,CAAC;QAEvB,SAAI,GAAG;YACH;gBACA,KAAK,EAAE,YAAY;gBACnB,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,KAAK,EAAE,UAAU;gBACjB,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,KAAK,EAAE,aAAa;gBACpB,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,CAAC;aACZ;YACD;gBACE,KAAK,EAAE,UAAU;gBACjB,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,CAAC;aACZ;SACH,CAAC;IAmBH,CAAC;IAjBK,8BAAO,GAAP,UAAQ,YAAY;QAClB,IAAM,OAAO,GAAG;YACd,KAAK,EAAE,YAAY;YACnB,QAAQ,EAAE,CAAC;YACX,IAAI,EAAE,KAAK;SACZ,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC;IAEJ,qBAAqB;IAClB,+DAA+D;IAElE,IAAI;IACJ,iCAAU,GAAV,UAAY,KAAK;QAChB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC5B,CAAC;IAzCS,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CA2CxB;IAAD,mBAAC;CAAA;AA3CwB;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AAY/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAVrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACftB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\r\\np{\\r\\n  font-weight: bold;\\r\\n  color:blue;\\r\\n}\\r\\n\\r\\n.table{\\r\\n  width:75%;\\r\\n  text-align: center;\\r\\n  margin-left:auto;\\r\\n  margin-right:auto;\\r\\n}\\r\\n\\r\\n.div{\\r\\n\\r\\n}\\r\\n\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<br>\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n  <p>A simple checklist application using Angular</p>\\n</div>\\n<br>\\n<div style=\\\"text-align: center\\\">\\n\\n  <input type=\\\"text\\\" #newTodo />\\n  <button (click)=\\\"addTodo(newTodo.value); newTodo.value=''\\\">Add</button>\\n<br>\\n<br>\\n<br>\\n\\n<div class=\\\"table\\\">\\n  <table class=\\\"table table-bordered\\\">\\n    <th> Label</th>\\n    <th> Priority</th>\\n    <th> Done</th>\\n    <th>Actions</th>\\n    <th></th>\\n    <tr *ngFor=\\\"let x of todo\\\">\\n      <td>{{x.label}}</td>\\n      <td>{{x.priority}}</td>\\n      <td>{{x.done}}</td>\\n      <td>{{x.done ? '&#10003;' :'&#10005;'}}</td>\\n\\n      <td>\\n        <button (click)=\\\"deleteTodo(todo)\\\" > Delete</button>\\n      </td>\\n\\n    </tr>\\n  </table>\\n\\n\\n</div>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todolist app';\n\n  todo = [\n      {\n      label: 'Bring Milk',\n      done: false,\n      priority: 3\n    },\n    {\n      label: 'pay bill',\n      done: true,\n      priority: 1\n    },\n    {\n      label: 'clean house',\n      done: false,\n      priority: 2\n    },\n    {\n      label: 'go crazy',\n      done: false,\n      priority: 2\n    }\n ];\n\n      addTodo(newTodoLabel) {\n        const newTodo = {\n          label: newTodoLabel,\n          priority: 1,\n          done: false\n        };\n        this.todo.push(newTodo);\n      }\n\n   // deleteTodo(todo) {\n      // this.todo = this.todo.filter( t => t.label !== todo.label );\n\n   // }\n   deleteTodo (index) {\n    this.todo.splice(index, 1);\n   }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}